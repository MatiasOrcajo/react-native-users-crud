{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Matias\\\\Desktop\\\\Programacion\\\\react\\\\react-firebase-userscrud\\\\screens\\\\CreateUserScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport firebase from \"../database/firebase\";\n\nvar CreateUserScreen = function CreateUserScreen() {\n  var _useState = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var handleChange = function handleChange(name, value) {\n    setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, name, value)));\n  };\n\n  var saveNewUser = function saveNewUser() {\n    return _regeneratorRuntime.async(function saveNewUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(state.name === \"\")) {\n              _context.next = 4;\n              break;\n            }\n\n            alert(\"Please provide a name\");\n            _context.next = 6;\n            break;\n\n          case 4:\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(firebase.db.collection(\"users\").add({\n              name: state.name,\n              email: state.email,\n              phone: state.phone\n            }));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.inputGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Name User\",\n    onChangeText: function onChangeText(value) {\n      handleChange(\"name\", value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.inputGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Email User\",\n    onChangeText: function onChangeText(value) {\n      handleChange(\"email\", value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.inputGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Phone User\",\n    onChangeText: function onChangeText(value) {\n      handleChange(\"phone\", value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"Send\",\n    onPress: function onPress() {\n      return saveNewUser();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 35\n  },\n  inputGroup: {\n    flex: 1,\n    padding: 10,\n    marginBottom: 25,\n    borderBottomWidth: 1,\n    borderBottomColor: '#cccccc'\n  }\n});\nexport default CreateUserScreen;","map":{"version":3,"sources":["C:/Users/Matias/Desktop/Programacion/react/react-firebase-userscrud/screens/CreateUserScreen.js"],"names":["React","useState","firebase","CreateUserScreen","name","email","phone","state","setState","handleChange","value","saveNewUser","alert","db","collection","add","styles","container","inputGroup","StyleSheet","create","flex","padding","marginBottom","borderBottomWidth","borderBottomColor"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport {View, Button, TextInput, ScrollView, StyleSheet} from 'react-native'\r\nimport firebase from '../database/firebase'\r\n\r\nconst CreateUserScreen = () => {\r\n    const [state, setState] = useState({\r\n        name:\"\",\r\n        email:\"\",\r\n        phone:\"\",\r\n    });\r\n\r\n    const handleChange = (name, value)=>{\r\n        setState({...state, [name]: value})\r\n    }\r\n\r\n    const saveNewUser = async()=>{\r\n        if(state.name === \"\"){\r\n            alert(\"Please provide a name\")\r\n        } else{\r\n           await firebase.db.collection(\"users\").add({\r\n                name: state.name,\r\n                email: state.email,\r\n                phone: state.phone\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <ScrollView style={styles.container}>\r\n            <View style={styles.inputGroup}>\r\n                <TextInput placeholder=\"Name User\" onChangeText={(value)=> {handleChange(\"name\", value)}}></TextInput>\r\n            </View>\r\n            <View style={styles.inputGroup}>\r\n                <TextInput placeholder=\"Email User\" onChangeText={(value)=> {handleChange(\"email\", value)}}></TextInput>\r\n            </View>\r\n            <View style={styles.inputGroup}>\r\n                <TextInput placeholder=\"Phone User\" onChangeText={(value)=> {handleChange(\"phone\", value)}}></TextInput>\r\n            </View>\r\n            <View>\r\n                <Button title=\"Send\" onPress={()=> saveNewUser()}></Button>\r\n            </View>\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex: 1,\r\n        padding: 35,\r\n    },\r\n    inputGroup:{\r\n        flex: 1,\r\n        padding: 10,\r\n        marginBottom: 25,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#cccccc',\r\n    },\r\n})\r\n\r\n\r\nexport default CreateUserScreen"]},"metadata":{},"sourceType":"module"}