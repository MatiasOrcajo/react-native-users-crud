{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Matias\\\\Desktop\\\\Programacion\\\\react\\\\react-firebase-userscrud\\\\screens\\\\UserDetailScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport firebase from \"../database/firebase\";\n\nvar UserDetailScreen = function UserDetailScreen() {\n  var _useState = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var handleChange = function handleChange(name, value) {\n    setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, name, value)));\n  };\n\n  return React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Name\",\n    autoCompleteType: \"username\",\n    value: user.name,\n    onChangeText: function onChangeText(value) {\n      return handleChange(value, \"name\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    autoCompleteType: \"email\",\n    placeholder: \"Email\",\n    value: user.email,\n    onChangeText: function onChangeText(value) {\n      return handleChange(value, \"email\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Phone\",\n    autoCompleteType: \"tel\",\n    value: user.phone,\n    onChangeText: function onChangeText(value) {\n      return handleChange(value, \"phone\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Delete\",\n    color: \"#E37399\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Update\",\n    color: \"#19AC52\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default UserDetailScreen;","map":{"version":3,"sources":["C:/Users/Matias/Desktop/Programacion/react/react-firebase-userscrud/screens/UserDetailScreen.js"],"names":["React","useEffect","useState","TextInput","firebase","UserDetailScreen","name","email","phone","state","setState","handleChange","value","user"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;AASA,SAASC,SAAT,QAA0B,8BAA1B;AAEA,OAAOC,QAAP;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3B,kBAA0BH,QAAQ,CAAC;AAC/BI,IAAAA,IAAI,EAAC,EAD0B;AAE/BC,IAAAA,KAAK,EAAC,EAFyB;AAG/BC,IAAAA,KAAK,EAAC;AAHyB,GAAD,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAMA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACL,IAAD,EAAOM,KAAP,EAAe;AAChCF,IAAAA,QAAQ,iCAAKD,KAAL,2BAAaH,IAAb,EAAoBM,KAApB,GAAR;AACH,GAFD;;AAIA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGF,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC,MADd;AAEE,IAAA,gBAAgB,EAAC,UAFnB;AAIE,IAAA,KAAK,EAAEC,IAAI,CAACP,IAJd;AAKE,IAAA,YAAY,EAAE,sBAACM,KAAD;AAAA,aAAWD,YAAY,CAACC,KAAD,EAAQ,MAAR,CAAvB;AAAA,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHE,EAYF,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,gBAAgB,EAAC,OADnB;AAEE,IAAA,WAAW,EAAC,OAFd;AAIE,IAAA,KAAK,EAAEC,IAAI,CAACN,KAJd;AAKE,IAAA,YAAY,EAAE,sBAACK,KAAD;AAAA,aAAWD,YAAY,CAACC,KAAD,EAAQ,OAAR,CAAvB;AAAA,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZE,EAqBF,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC,OADd;AAEE,IAAA,gBAAgB,EAAC,KAFnB;AAIE,IAAA,KAAK,EAAEC,IAAI,CAACL,KAJd;AAKE,IAAA,YAAY,EAAE,sBAACI,KAAD;AAAA,aAAWD,YAAY,CAACC,KAAD,EAAQ,OAAR,CAAvB;AAAA,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CArBE,EA8BF,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,QADR;AAGE,IAAA,KAAK,EAAC,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CA9BE,EAuCF,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAEA,IAAA,KAAK,EAAC,SAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAvCE,CADJ;AA+CH,CA1DD;;AA4DA,eAAeP,gBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  ScrollView,\r\n  Button,\r\n  View,\r\n  Alert,\r\n  ActivityIndicator,\r\n  StyleSheet,\r\n} from \"react-native\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\n\r\nimport firebase from \"../database/firebase\";\r\n\r\nconst UserDetailScreen = () => {\r\n    const [state, setState] = useState({\r\n        name:\"\",\r\n        email:\"\",\r\n        phone:\"\",\r\n    });\r\n\r\n    const handleChange = (name, value)=>{\r\n        setState({...state, [name]: value})\r\n    }\r\n    \r\n    return (\r\n        <ScrollView \r\n        // style={styles.container}\r\n        >\r\n      <View>\r\n        <TextInput\r\n          placeholder=\"Name\"\r\n          autoCompleteType=\"username\"\r\n        //   style={styles.inputGroup}\r\n          value={user.name}\r\n          onChangeText={(value) => handleChange(value, \"name\")}\r\n        />\r\n      </View>\r\n      <View>\r\n        <TextInput\r\n          autoCompleteType=\"email\"\r\n          placeholder=\"Email\"\r\n        //   style={styles.inputGroup}\r\n          value={user.email}\r\n          onChangeText={(value) => handleChange(value, \"email\")}\r\n        />\r\n      </View>\r\n      <View>\r\n        <TextInput\r\n          placeholder=\"Phone\"\r\n          autoCompleteType=\"tel\"\r\n        //   style={styles.inputGroup}\r\n          value={user.phone}\r\n          onChangeText={(value) => handleChange(value, \"phone\")}\r\n        />\r\n      </View>\r\n      <View \r\n    //   style={styles.btn}\r\n      >\r\n        <Button\r\n          title=\"Delete\"\r\n        //   onPress={() => openConfirmationAlert()}\r\n          color=\"#E37399\"\r\n        />\r\n      </View>\r\n      <View>\r\n        <Button title=\"Update\" \r\n        // onPress={() => updateUser()} \r\n        color=\"#19AC52\" />\r\n      </View>\r\n    </ScrollView>\r\n    )\r\n}\r\n\r\nexport default UserDetailScreen"]},"metadata":{},"sourceType":"module"}