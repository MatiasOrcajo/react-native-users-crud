{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Matias\\\\Desktop\\\\Programacion\\\\react\\\\react-firebase-userscrud\\\\screens\\\\UserDetailScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport firebase from \"../database/firebase\";\n\nvar UserDetailScreen = function UserDetailScreen(props) {\n  var _useState = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var handleChange = function handleChange(name, value) {\n    setuser(_objectSpread(_objectSpread({}, user), {}, _defineProperty({}, name, value)));\n  };\n\n  var _useState3 = useState({\n    id: '',\n    name: '',\n    email: '',\n    phone: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setuser = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setloading = _useState6[1];\n\n  var getUserById = function getUserById(id) {\n    var dbRef, doc, user;\n    return _regeneratorRuntime.async(function getUserById$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dbRef = firebase.db.collection('users').doc(id);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(dbRef.get());\n\n          case 3:\n            doc = _context.sent;\n            user = doc.data();\n            console.log(user);\n            setuser(_objectSpread({}, user));\n            setloading(false);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getUserById(props.route.params.userId);\n  }, []);\n\n  var deleteUser = function deleteUser() {\n    var dbRef;\n    return _regeneratorRuntime.async(function deleteUser$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            dbRef = firebase.db.collection('users').doc(props.route.params.userId);\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(dbRef.delete());\n\n          case 3:\n            props.navigation.navigate(\"UsersList\");\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var openConfirmationAlert = function openConfirmationAlert() {\n    Alert.alert(\"Removing the User\", \"Are you sure?\", [{\n      text: \"Yes\",\n      onPress: function onPress() {\n        return deleteUser();\n      }\n    }, {\n      text: \"No\",\n      onPress: function onPress() {\n        return console.log(\"canceled\");\n      }\n    }], {\n      cancelable: true\n    });\n  };\n\n  var updateUser = function updateUser() {\n    var dbRef;\n    return _regeneratorRuntime.async(function updateUser$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            dbRef = firebase.db.collection('users').doc(props.route.params.userId);\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(dbRef.set({\n              name: user.name,\n              email: user.email,\n              phone: user.phone\n            }));\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (loading) {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Name\",\n    autoCompleteType: \"username\",\n    style: styles.inputGroup,\n    value: user.name,\n    onChangeText: function onChangeText(value) {\n      return handleChange(\"name\", value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    autoCompleteType: \"email\",\n    placeholder: \"Email\",\n    style: styles.inputGroup,\n    value: user.email,\n    onChangeText: function onChangeText(value) {\n      return handleChange(\"email\", value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Phone\",\n    autoCompleteType: \"tel\",\n    style: styles.inputGroup,\n    value: user.phone,\n    onChangeText: function onChangeText(value) {\n      return handleChange(\"phone\", value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"Delete\",\n    color: \"#E37399\",\n    onPress: function onPress() {\n      return openConfirmationAlert();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"Update\",\n    color: \"#19AC52\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 35\n  },\n  inputGroup: {\n    flex: 1,\n    padding: 10,\n    marginBottom: 25,\n    borderBottomWidth: 1,\n    borderBottomColor: '#cccccc'\n  },\n  button: {\n    marginBottom: 5\n  }\n});\nexport default UserDetailScreen;","map":{"version":3,"sources":["C:/Users/Matias/Desktop/Programacion/react/react-firebase-userscrud/screens/UserDetailScreen.js"],"names":["React","useEffect","useState","TextInput","firebase","UserDetailScreen","props","name","email","phone","state","setState","handleChange","value","setuser","user","id","loading","setloading","getUserById","dbRef","db","collection","doc","get","data","console","log","route","params","userId","deleteUser","delete","navigation","navigate","openConfirmationAlert","Alert","alert","text","onPress","cancelable","updateUser","set","styles","container","inputGroup","button","StyleSheet","create","flex","padding","marginBottom","borderBottomWidth","borderBottomColor"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;AASA,SAASC,SAAT,QAA0B,8BAA1B;AAEA,OAAOC,QAAP;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAChC,kBAA0BJ,QAAQ,CAAC;AAC/BK,IAAAA,IAAI,EAAC,EAD0B;AAE/BC,IAAAA,KAAK,EAAC,EAFyB;AAG/BC,IAAAA,KAAK,EAAC;AAHyB,GAAD,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAMA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACL,IAAD,EAAOM,KAAP,EAAe;AAChCC,IAAAA,OAAO,iCAAKC,IAAL,2BAAYR,IAAZ,EAAmBM,KAAnB,GAAP;AACH,GAFD;;AAIA,mBAAwBX,QAAQ,CAAC;AAC7Bc,IAAAA,EAAE,EAAC,EAD0B;AAE7BT,IAAAA,IAAI,EAAC,EAFwB;AAG7BC,IAAAA,KAAK,EAAC,EAHuB;AAI7BC,IAAAA,KAAK,EAAC;AAJuB,GAAD,CAAhC;AAAA;AAAA,MAAOM,IAAP;AAAA,MAAaD,OAAb;;AAOA,mBAA8BZ,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOe,OAAP;AAAA,MAAgBC,UAAhB;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAOH,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACVI,YAAAA,KADU,GACFhB,QAAQ,CAACiB,EAAT,CAAYC,UAAZ,CAAuB,OAAvB,EAAgCC,GAAhC,CAAoCP,EAApC,CADE;AAAA;AAAA,6CAGEI,KAAK,CAACI,GAAN,EAHF;;AAAA;AAGVD,YAAAA,GAHU;AAIVR,YAAAA,IAJU,GAIHQ,GAAG,CAACE,IAAJ,EAJG;AAKhBC,YAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACAD,YAAAA,OAAO,mBACAC,IADA,EAAP;AAGAG,YAAAA,UAAU,CAAC,KAAD,CAAV;;AATgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAYAjB,EAAAA,SAAS,CAAC,YAAI;AACVkB,IAAAA,WAAW,CAACb,KAAK,CAACsB,KAAN,CAAYC,MAAZ,CAAmBC,MAApB,CAAX;AACH,GAFQ,EAEP,EAFO,CAAT;;AAMA,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AACTX,YAAAA,KADS,GACDhB,QAAQ,CAACiB,EAAT,CAAYC,UAAZ,CAAuB,OAAvB,EAAgCC,GAAhC,CAAoCjB,KAAK,CAACsB,KAAN,CAAYC,MAAZ,CAAmBC,MAAvD,CADC;AAAA;AAAA,6CAETV,KAAK,CAACY,MAAN,EAFS;;AAAA;AAGf1B,YAAAA,KAAK,CAAC2B,UAAN,CAAiBC,QAAjB,CAA0B,WAA1B;;AAHe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAMA,MAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAChCC,IAAAA,KAAK,CAACC,KAAN,CACE,mBADF,EAEE,eAFF,EAGE,CACE;AAAEC,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,OAAO,EAAE;AAAA,eAAMR,UAAU,EAAhB;AAAA;AAAxB,KADF,EAEE;AAAEO,MAAAA,IAAI,EAAE,IAAR;AAAcC,MAAAA,OAAO,EAAE;AAAA,eAAMb,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAN;AAAA;AAAvB,KAFF,CAHF,EAOE;AACEa,MAAAA,UAAU,EAAE;AADd,KAPF;AAWD,GAZH;;AAcE,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AACTrB,YAAAA,KADS,GACDhB,QAAQ,CAACiB,EAAT,CAAYC,UAAZ,CAAuB,OAAvB,EAAgCC,GAAhC,CAAoCjB,KAAK,CAACsB,KAAN,CAAYC,MAAZ,CAAmBC,MAAvD,CADC;AAAA;AAAA,6CAETV,KAAK,CAACsB,GAAN,CAAU;AACZnC,cAAAA,IAAI,EAAEQ,IAAI,CAACR,IADC;AAEZC,cAAAA,KAAK,EAAEO,IAAI,CAACP,KAFA;AAGZC,cAAAA,KAAK,EAAEM,IAAI,CAACN;AAHA,aAAV,CAFS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AASF,MAAGQ,OAAH,EAAW;AACP,WACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAED,SACI,oBAAC,UAAD;AACI,IAAA,KAAK,EAAE0B,MAAM,CAACC,SADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAC,MADhB;AAEI,IAAA,gBAAgB,EAAC,UAFrB;AAGI,IAAA,KAAK,EAAED,MAAM,CAACE,UAHlB;AAII,IAAA,KAAK,EAAE9B,IAAI,CAACR,IAJhB;AAKI,IAAA,YAAY,EAAE,sBAACM,KAAD;AAAA,aAAWD,YAAY,CAAC,MAAD,EAAQC,KAAR,CAAvB;AAAA,KALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,EAaI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,gBAAgB,EAAC,OADrB;AAEI,IAAA,WAAW,EAAC,OAFhB;AAGI,IAAA,KAAK,EAAE8B,MAAM,CAACE,UAHlB;AAII,IAAA,KAAK,EAAE9B,IAAI,CAACP,KAJhB;AAKI,IAAA,YAAY,EAAE,sBAACK,KAAD;AAAA,aAAWD,YAAY,CAAC,OAAD,EAAUC,KAAV,CAAvB;AAAA,KALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAbJ,EAsBI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAC,OADhB;AAEI,IAAA,gBAAgB,EAAC,KAFrB;AAGI,IAAA,KAAK,EAAE8B,MAAM,CAACE,UAHlB;AAIK,IAAA,KAAK,EAAE9B,IAAI,CAACN,KAJjB;AAKI,IAAA,YAAY,EAAE,sBAACI,KAAD;AAAA,aAAWD,YAAY,CAAC,OAAD,EAAUC,KAAV,CAAvB;AAAA,KALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAtBJ,EA+BI,oBAAC,IAAD;AACA,IAAA,KAAK,EAAE8B,MAAM,CAACG,MADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,MAAD;AAEI,IAAA,KAAK,EAAC,QAFV;AAII,IAAA,KAAK,EAAC,SAJV;AAKI,IAAA,OAAO,EAAE;AAAA,aAAIX,qBAAqB,EAAzB;AAAA,KALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CA/BJ,EA2CI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAEI,IAAA,KAAK,EAAC,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA3CJ,CADJ;AAmDH,CAhID;;AAkIA,IAAMQ,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,SAAS,EAAC;AACNK,IAAAA,IAAI,EAAE,CADA;AAENC,IAAAA,OAAO,EAAE;AAFH,GADmB;AAK7BL,EAAAA,UAAU,EAAC;AACPI,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,OAAO,EAAE,EAFF;AAGPC,IAAAA,YAAY,EAAE,EAHP;AAIPC,IAAAA,iBAAiB,EAAE,CAJZ;AAKPC,IAAAA,iBAAiB,EAAE;AALZ,GALkB;AAY7BP,EAAAA,MAAM,EAAC;AACHK,IAAAA,YAAY,EAAC;AADV;AAZsB,CAAlB,CAAf;AAiBA,eAAe9C,gBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  ScrollView,\r\n  Button,\r\n  View,\r\n  Alert,\r\n  ActivityIndicator,\r\n  StyleSheet,\r\n} from \"react-native\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\n\r\nimport firebase from \"../database/firebase\";\r\n\r\nconst UserDetailScreen = (props) => {\r\n    const [state, setState] = useState({\r\n        name:\"\",\r\n        email:\"\",\r\n        phone:\"\",\r\n    });\r\n\r\n    const handleChange = (name, value)=>{\r\n        setuser({...user, [name]: value})\r\n    }\r\n\r\n    const [user, setuser] = useState({\r\n        id:'',\r\n        name:'',\r\n        email:'',\r\n        phone:''\r\n    })\r\n\r\n    const [loading, setloading] = useState(true)\r\n\r\n    // OBTENEMOS EL USUARIO A RENDERIZAR MEDIANTE EL ID\r\n\r\n    const getUserById = async (id)=>{\r\n        const dbRef = firebase.db.collection('users').doc(id);\r\n        // se usa await por el tiempo de espera para la recepción de la petición\r\n        const doc = await dbRef.get();\r\n        const user = doc.data();\r\n        console.log(user)\r\n        setuser({\r\n            ...user,\r\n        })\r\n        setloading(false)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getUserById(props.route.params.userId)\r\n    },[])\r\n\r\n    // ELIMINAR USUARIO\r\n\r\n    const deleteUser = async () => {\r\n        const dbRef = firebase.db.collection('users').doc(props.route.params.userId)\r\n        await dbRef.delete()\r\n        props.navigation.navigate(\"UsersList\")\r\n    }\r\n\r\n    const openConfirmationAlert = () => {\r\n        Alert.alert(\r\n          \"Removing the User\",\r\n          \"Are you sure?\",\r\n          [\r\n            { text: \"Yes\", onPress: () => deleteUser() },\r\n            { text: \"No\", onPress: () => console.log(\"canceled\") },\r\n          ],\r\n          {\r\n            cancelable: true,\r\n          }\r\n        );\r\n      };\r\n\r\n      const updateUser = async () => {\r\n          const dbRef = firebase.db.collection('users').doc(props.route.params.userId)\r\n          await dbRef.set({\r\n              name: user.name,\r\n              email: user.email,\r\n              phone: user.phone\r\n          })\r\n      }\r\n\r\n    if(loading){\r\n        return(\r\n            <View>\r\n                <ActivityIndicator size=\"large\"></ActivityIndicator>\r\n            </View>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <ScrollView\r\n            style={styles.container}\r\n        // style={styles.container}\r\n        >\r\n            <View>\r\n                <TextInput\r\n                    placeholder=\"Name\"\r\n                    autoCompleteType=\"username\"\r\n                    style={styles.inputGroup}\r\n                    value={user.name}\r\n                    onChangeText={(value) => handleChange(\"name\",value)}\r\n                />\r\n            </View>\r\n            <View>\r\n                <TextInput\r\n                    autoCompleteType=\"email\"\r\n                    placeholder=\"Email\"\r\n                    style={styles.inputGroup}\r\n                    value={user.email}\r\n                    onChangeText={(value) => handleChange(\"email\", value)}\r\n                />\r\n            </View>\r\n            <View>\r\n                <TextInput\r\n                    placeholder=\"Phone\"\r\n                    autoCompleteType=\"tel\"\r\n                    style={styles.inputGroup}\r\n                     value={user.phone}\r\n                    onChangeText={(value) => handleChange(\"phone\", value)}\r\n                />\r\n            </View>\r\n            <View\r\n            style={styles.button}\r\n            //   style={styles.btn}\r\n            >\r\n                <Button\r\n                    \r\n                    title=\"Delete\"\r\n                    //   onPress={() => openConfirmationAlert()}\r\n                    color=\"#E37399\"\r\n                    onPress={()=>openConfirmationAlert()}\r\n                />\r\n            </View>\r\n            <View>\r\n                <Button title=\"Update\"\r\n                    // onPress={() => updateUser()} \r\n                    color=\"#19AC52\" />\r\n            </View>\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex: 1,\r\n        padding: 35,\r\n    },\r\n    inputGroup:{\r\n        flex: 1,\r\n        padding: 10,\r\n        marginBottom: 25,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#cccccc',\r\n    },\r\n    button:{\r\n        marginBottom:5,\r\n    }\r\n})\r\n\r\nexport default UserDetailScreen"]},"metadata":{},"sourceType":"module"}